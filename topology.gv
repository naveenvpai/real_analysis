digraph G {
  metr_sp -> neighb;
  metr_sp -> compl;
  neighb -> int_pt;
  neighb -> lim_pt;
  neighb -> iso_pt;
  int_pt -> open;
  lim_pt -> closed;
  lim_pt -> closur;
  lim_pt -> dense;
  closed -> perf;
  closed -> rel_clo;
  open -> rel_op;
  open-> op_cov;
  op_cov -> compa;
  compl -> de_morg;
  compl -> subway;
  open -> subway;
  closed -> subway;
  subway -> one_th_balls;
  compa -> one_th_balls;
  open -> subsub;
  de_morg -> subsub;
  subsub -> patch;
  compa -> patch;
  subway -> patch;
  closed -> flip_phone;
  closur -> flip_phone;
  compa -> rare;
  subway -> rare;
  de_morg -> rare;
  compa -> sparse;
  lim_pt -> sparse;
  rare -> diameter;
  vector_sp -> convex;
  metr_sp -> convex;
  closur -> separ;
  separ -> connect;
  connect -> circ_ring;
  metr_sp -> func_lim;
  metr_sp -> contin;
  perf -> microscope;
  func_lim -> func_lim_transl;
  contin -> func_cont;
  metr_sp -> func_comp;
  contin -> two_target;
  func_comp -> two_target;
  open -> ball_toss;
  contin -> ball_toss;
  lim_pt -> contin_lim;
  contin -> contin_combo;
  vector_sp -> contin_combo;
  compa -> ball_of_balls;
  closed -> ball_of_balls;
  compa -> delegate;
  contin -> delegate;
  ball_of_balls -> contin_clo_bou;
  delegate -> contin_clo_bou;
  contin_clo_bou -> contin_sup_inf;
  delegate -> alibi
  patch -> alibi
  subway -> alibi
  metr_sp -> unif_contin
  unif_contin -> frog_egg
  compa -> frog_egg
  contin -> frog_egg
  circ_ring -> split_gap
  ball_toss -> split_gap
  split_gap -> butt_cheeks
  topol -> top_sp
  top_sp -> top_contin
  top_sp -> top_lim
  top_sp -> three_slices
  discont1
  discont2
  func_mono
  func_mono -> floorklift
  discont2 -> mono_gap
  floorklift -> mono_gap
  func_mono -> staircase
  floorklift -> staircase
  discont1 -> staircase
  metr_sp -> func_conv
  metr_sp -> func_conv_unif
  func_conv_unif -> func_cauch_unif
  func_conv_unif -> func_unif_sup
  func_ser_conv_unif
  contin -> follower
  func_conv_unif -> follower
  C -> timestamp
  follower -> timestamp
  metr_sp -> complete
  complete -> timestamp
  compa -> func_layers
  contin -> func_layers
  func_conv -> func_layers
  neighb -> tot_boun
  tot_boun -> ballception
  compa -> ballception
  complete -> ballception
  tot_boun -> ballgame
  metr_sp -> ptwise_boun
  metr_sp -> equi_contin
  frog_egg -> split_fin_min
  func_unif_sup -> split_fin_min
  func_cauch_unif -> split_fin_min
  ptwise_boun -> arzela
  equi_contin -> arzela
  closed -> arzela
  compa -> arzela
}

/*
 * de_morg = De Morgan's Law
 * subway = Complement of Open Sets is Closed
 * one_th_balls = Compact Sets are Closed
 * subsub = Union/Intersection of Open/Closed Sets
 * patch = Closed subsets of compact sets are compact
 * flip_phone = Characterization of Closure
 * rare = Infinite Intersection of Compact Sets Nonempty when Finite Intersection Always Nonempty
 * sparse = Compact sets are Sequentially compact
 * microscope = Cantor 1/3 set is perfect
 * circ_ring = Characterization of Connected Sets
 * two_target = Composition of Partially Continuous Function is Partially Continuous
 * ball_toss = Continuous iff preimage of open sets are open
 * delegate = Continuous mpas preserve compactness
 * contin_lim = Continuous maps preserve limits
 * contin_combo = Combos of continuous maps are continuous
 * ball_of_balls = Compact implies closed and bounded
 * contin_clo_bou = Continuous func image of compact set is closed and bounded;
 * contin_sup_inf = Continuous func achieves inf and sup on compact set
 * alibi = 1-to-1 map from compact metric space preserves open sets
 * frog_egg = continuous map from a compact metric space is uniformly continuous
 * split_gap = continuous maps preserve connectedness
 * butt_cheeks = intermediate value theorem
 * three_slices = extended reals topology makes R compact
 * floorklift = left and right limits always exist for monotonically increasing func + inequality involving sup/inf
 * staircase = Monotone function on open interval has countably many discontinuities
 * mono_gap = Monotone funcs R to R have no discont of 2nd kind
 * func_cauch_unif = Equivalent characterization of function uniform convergence
 * func_unif_sup = Converges uniformly iff supremum of distance goes to zero as function sequence goes to infinity
 * func_ser_conv_unif = Function series converges uniformsly if supremum less than terms of convergent sequence (via comparison test)
 * follower = if sequence of pointwise convergent, continuous functions converges uniformly then converges to continuous function
 * timestamp = if Y complete, C(X;Y) is complete
 * func_layers = monotone sequence of continuous functions on a compact metric space converges uniformly
 * ballception = compact iff totally bounded and complete
 * ballgame = if you have arbitrary epsilon maps with totally bounded images as well as "reverse continuity" then totally bounded
 * split_fin_min = Cauchy sequence of contin,boun functions from compact metric space is equicontin
 * arzela = Arzela-Escoli: set of contin,boun funcs is compact iff closed and ptwise bounded and equicontinuous
 * */
